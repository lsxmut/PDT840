<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.redphase.dao.master.user.IAuthPermDao">
    <!-- 字段列表 -->
    <sql id="Base_Column_List">
		 t1.id as "id"
        ,t1.name as "name"
        ,t1.match_str as "matchStr"
        ,t1.parent_id as "parentId"
        ,t1.memo as "memo"
        ,t1.create_id as "createId"
        ,t1.date_created as "dateCreated"
        ,t1.date_updated as "dateUpdated"
        ,t1.nodel_flag as "noDelFlag"
	</sql>
    <!-- 根据主键获取信息详情 -->
    <select id="selectByPrimaryKey" resultType="com.redphase.entity.user.AuthPerm" parameterType="com.redphase.entity.user.AuthPerm">
        select
        <include refid="Base_Column_List"/>
        from auth_perm t1
        where t1.id = #{id}
    </select>
    <!-- 新增单条数据 -->
    <insert id="insert" parameterType="com.redphase.entity.user.AuthPerm">
		insert into auth_perm (
            id
           ,name
           ,match_str
           ,parent_id
           ,memo
           ,order_no
           ,version
           ,keyword
           ,del_flag
           ,create_id
           ,date_created
           ,date_updated
           ,nodel_flag
        ) values (
            #{id}
           ,#{name}
           ,#{matchStr}
           ,#{parentId}
           ,#{memo}
           ,#{orderNo}
           ,0
           ,#{keyword}
           ,0
           ,#{createId}
           ,strftime('%s000','now')
           ,strftime('%s000','now')
           ,0
        )
	</insert>
    <!-- 数据更新 -->
    <update id="update" parameterType="com.redphase.entity.user.AuthPerm">
        update auth_perm set version=version+1,date_updated=strftime('%s000','now'),parent_id=#{parentId}
        <if test="name!=null">,name = #{name}</if>
        <if test="matchStr!=null">,match_str = #{matchStr}</if>
        <if test="memo!=null">,memo = #{memo}</if>
        <if test="orderNo!=null">,order_no = #{orderNo}</if>
        <if test="keyword!=null">,keyword = #{keyword}</if>
        where id = #{id}
    </update>

    <!--列表通用条件-->
    <sql id="list_where_sql">
        <choose>
            <when test="delFlag!=null">
                and t1.del_flag=#{delFlag}
            </when>
            <otherwise>
                and t1.del_flag=0
            </otherwise>
        </choose>
        <if test="keyword!=null and keyword!=''">
            and (t1.name like '%'||#{keyword}||'%' or t1.match_str like '%'||#{keyword}||'%')
        </if>
        <if test="dateBegin!=null and dateBegin!=''">
            <![CDATA[ and date(t1.date_created/1000,'unixepoch', 'localtime')>=#{dateBegin}]]>
        </if>
        <if test="dateEnd!=null and dateEnd!=''">
            <![CDATA[ and date(t1.date_created/1000,'unixepoch', 'localtime')<=#{dateEnd}]]>
        </if>
    </sql>

    <!--信息列表 分页 -->
    <select id="findDataIsPage" parameterType="com.redphase.entity.user.AuthPerm" resultType="com.redphase.entity.user.AuthPerm">
        select
        <include refid="Base_Column_List"/>
        from auth_perm t1
        where 1=1
        <include refid="list_where_sql"/>
        order by t1.order_no desc,t1.date_created desc
    </select>
    <!--信息列表 -->
    <select id="findDataIsList" parameterType="com.redphase.entity.user.AuthPerm" resultType="com.redphase.entity.user.AuthPerm">
        select
        <include refid="Base_Column_List"/>
        from auth_perm t1
        where 1=1
        <include refid="list_where_sql"/>
        order by t1.order_no desc,t1.date_created desc
    </select>
    <!-- 角色权限信息列表>根据员工id -->
    <select id="getPermListByUserId" resultType="com.redphase.entity.user.AuthPerm" parameterType="map">
        <choose>
            <when test="iissuperman==1"><!-- i'm superman -->
                select
                <include refid="Base_Column_List"/>
                from auth_perm t1
                where t1.del_flag=0
            </when>
            <otherwise>
                select
                DISTINCT(t1.match_str) as "matchStr"
                from auth_perm t1
                inner join auth_role_vs_perm t2 on (t1.id=t2.perm_id)
                where t1.del_flag=0 and t2.role_id=#{roleId}
            </otherwise>
        </choose>
    </select>
    <select id="findPermDataIsListByRoleId" resultType="com.redphase.entity.user.AuthPerm" parameterType="map">
		select
		DISTINCT(t1.match_str) as "matchStr",t1.id
		from auth_perm t1
		inner join auth_role_vs_perm t2 on (t1.id=t2.perm_id)
		where t1.del_flag=0 and t2.role_id= #{roleId}
	</select>
</mapper>